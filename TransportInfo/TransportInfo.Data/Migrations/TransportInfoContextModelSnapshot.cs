// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransportInfo.Data.Contexts;

namespace TransportInfo.Data.Migrations
{
    [DbContext(typeof(TransportInfoContext))]
    partial class TransportInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TransportInfo.Domain.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorNameGE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            ColorName = "silver",
                            ColorNameGE = "ვერცხლისფერი"
                        },
                        new
                        {
                            Id = 11,
                            ColorName = "green",
                            ColorNameGE = "მწვანე"
                        },
                        new
                        {
                            Id = 12,
                            ColorName = "red",
                            ColorNameGE = "წითელი"
                        });
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.Fuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelTypeGE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fuel");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            FuelType = "Electric",
                            FuelTypeGE = "ელექტრო"
                        },
                        new
                        {
                            Id = 11,
                            FuelType = "Hybrid",
                            FuelTypeGE = "ჰიბრიდი"
                        },
                        new
                        {
                            Id = 12,
                            FuelType = "Petrol",
                            FuelTypeGE = "ბენზინი"
                        },
                        new
                        {
                            Id = 13,
                            FuelType = "Gas/Petrol",
                            FuelTypeGE = "გაზი/ბენზინი"
                        });
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = new Guid("08277147-51bb-4b17-bebe-05ad4942436c"),
                            FirstName = "ბესო",
                            LastName = "გოგისვანიძე",
                            PersonalNumber = "60001137083",
                            Phone = "577977329"
                        },
                        new
                        {
                            PersonId = new Guid("d737f21d-e39f-49fb-9b58-98ce7c1386dd"),
                            FirstName = "ვახო",
                            LastName = "კინწურაშვილი",
                            PersonalNumber = "60001137083",
                            Phone = "577977329"
                        },
                        new
                        {
                            PersonId = new Guid("9bad0423-2cf9-4a04-8604-b3d14e0f37eb"),
                            FirstName = "ლადო",
                            LastName = "მშვენიერაძე",
                            PersonalNumber = "60001137083",
                            Phone = "577977329"
                        });
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.Transport", b =>
                {
                    b.Property<Guid>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("FuelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VinCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransportId");

                    b.HasIndex("ColorId");

                    b.HasIndex("FuelId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelId");

                    b.ToTable("Transports");

                    b.HasData(
                        new
                        {
                            TransportId = new Guid("08277147-51bb-4b17-bebe-05ad4942435c"),
                            ColorId = 10,
                            FuelId = 10,
                            ManufactureDate = new DateTime(1990, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturerId = 10,
                            ModelId = 10,
                            RegistrationNumber = "AA-200-AA",
                            VinCode = "34353453THFDHJ87Y6"
                        },
                        new
                        {
                            TransportId = new Guid("08277147-51bb-4b17-bebe-05ad4942445c"),
                            ColorId = 11,
                            FuelId = 12,
                            ManufactureDate = new DateTime(2000, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturerId = 11,
                            ModelId = 11,
                            RegistrationNumber = "BB-200-AA",
                            VinCode = "34353453THFDHJ87Y6"
                        },
                        new
                        {
                            TransportId = new Guid("08277147-51bb-4b17-bebe-05ad4943435c"),
                            ColorId = 12,
                            FuelId = 13,
                            ManufactureDate = new DateTime(1999, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturerId = 12,
                            ModelId = 11,
                            RegistrationNumber = "CC-200-AA",
                            VinCode = "34353453THFDHJ87Y6"
                        });
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.TransportManufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ManufacturerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerNameGE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransportManufacturer");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            ManufacturerName = "MERCEDES-BENZ",
                            ManufacturerNameGE = "მერსედეს-ბენც"
                        },
                        new
                        {
                            Id = 11,
                            ManufacturerName = "BMW",
                            ManufacturerNameGE = "ბმვ"
                        },
                        new
                        {
                            Id = 12,
                            ManufacturerName = "AUDI",
                            ManufacturerNameGE = "აუდი"
                        });
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.TransportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelNameGE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("TransportModel");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            ManufacturerId = 10,
                            ModelName = "E200",
                            ModelNameGE = "ე200"
                        },
                        new
                        {
                            Id = 11,
                            ManufacturerId = 11,
                            ModelName = "325",
                            ModelNameGE = "325"
                        },
                        new
                        {
                            Id = 12,
                            ManufacturerId = 12,
                            ModelName = "A8",
                            ModelNameGE = "ა8"
                        });
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.TransportPerson", b =>
                {
                    b.Property<Guid>("TransportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HolderStatus")
                        .HasColumnType("bit");

                    b.HasKey("TransportId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("TransportPerson");

                    b.HasData(
                        new
                        {
                            TransportId = new Guid("08277147-51bb-4b17-bebe-05ad4942435c"),
                            PersonId = new Guid("08277147-51bb-4b17-bebe-05ad4942436c"),
                            HolderStatus = true
                        },
                        new
                        {
                            TransportId = new Guid("08277147-51bb-4b17-bebe-05ad4942445c"),
                            PersonId = new Guid("d737f21d-e39f-49fb-9b58-98ce7c1386dd"),
                            HolderStatus = true
                        },
                        new
                        {
                            TransportId = new Guid("08277147-51bb-4b17-bebe-05ad4942435c"),
                            PersonId = new Guid("d737f21d-e39f-49fb-9b58-98ce7c1386dd"),
                            HolderStatus = false
                        });
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.Transport", b =>
                {
                    b.HasOne("TransportInfo.Domain.Entities.Color", "Color")
                        .WithMany("Transports")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransportInfo.Domain.Entities.Fuel", "Fuel")
                        .WithMany("Transports")
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransportInfo.Domain.Entities.TransportManufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransportInfo.Domain.Entities.TransportModel", "Model")
                        .WithMany("Transports")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Fuel");

                    b.Navigation("Manufacturer");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.TransportModel", b =>
                {
                    b.HasOne("TransportInfo.Domain.Entities.TransportManufacturer", "Manufacturer")
                        .WithMany("TransportModels")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.TransportPerson", b =>
                {
                    b.HasOne("TransportInfo.Domain.Entities.Person", "Person")
                        .WithMany("TransportPersons")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransportInfo.Domain.Entities.Transport", "Transport")
                        .WithMany("TransportPersons")
                        .HasForeignKey("TransportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.Color", b =>
                {
                    b.Navigation("Transports");
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.Fuel", b =>
                {
                    b.Navigation("Transports");
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.Person", b =>
                {
                    b.Navigation("TransportPersons");
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.Transport", b =>
                {
                    b.Navigation("TransportPersons");
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.TransportManufacturer", b =>
                {
                    b.Navigation("TransportModels");
                });

            modelBuilder.Entity("TransportInfo.Domain.Entities.TransportModel", b =>
                {
                    b.Navigation("Transports");
                });
#pragma warning restore 612, 618
        }
    }
}
